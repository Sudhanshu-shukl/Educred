const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-4dSMX-rY.js","assets/index-Ch0Y1xiN.css","assets/smart-contract-4f279559.browser.esm-l86b2WJA.js","assets/assertEnabled-69ed68b5.browser.esm-il59lfEz.js","assets/contract-appuri-29f0e515.browser.esm-dl8biRXT.js","assets/signature-f370b04e.browser.esm-0sJIU-jq.js","assets/index-BSEJ9kNR.js","assets/setErc20Allowance-bae9b83c.browser.esm-BpTPtwxZ.js","assets/contract-interceptor-d7b164a7.browser.esm-DNm8guYz.js","assets/contract-owner-4df2a33b.browser.esm-C4sJMfVj.js","assets/QueryParams-fe3080d5.browser.esm-C-khf3_T.js","assets/contract-platform-fee-e278431a.browser.esm-DlTp8Egn.js","assets/contract-roles-1ae2927f.browser.esm-BzrwtwY1.js","assets/contract-sales-cefc823c.browser.esm-C4ggqZWE.js","assets/erc-1155-f44423d5.browser.esm-SLLY7f-Q.js","assets/erc-20-c3294714.browser.esm-BAB8EcCl.js","assets/drop-claim-conditions-036d1ce4.browser.esm-sCFSJuLZ.js","assets/erc-721-434e5a52.browser.esm-q6UPO-ur.js","assets/marketplacev3-offers-95bada01.browser.esm-BqupGYqq.js","assets/cleanCurrencyAddress-870d4ccc.browser.esm-CdzfE-uh.js","assets/marketplace-15a16d65.browser.esm-BXhALNLO.js","assets/url-a45219bd.browser.esm-CnlspJ3o.js","assets/thirdweb-dev-contracts-js-factories-TWProxy__factory.browser.esm-BMZ2BtX5.js"])))=>i.map(i=>d[i]);
var ve=Object.defineProperty;var _e=(c,a,t)=>a in c?ve(c,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[a]=t;var f=(c,a,t)=>_e(c,typeof a!="symbol"?a+"":a,t);import{cZ as ot,c_ as Q,c$ as Zt,d0 as De,d1 as ht,d2 as _,d3 as pt,d4 as Xt,d5 as Qt,G as A,d6 as te,d7 as F,d8 as x,d9 as Te,da as Ee,db as Ie,dc as xt,dd as at,de as G,df as O,dg as Fe,dh as xe,bS as Se,di as Oe,bF as N,dj as Be,dk as ct,dl as Ue,dm as $,dn as M,dp as St,M as Et,cX as It,dq as Le,al as ee,dr as Re,ds as Ne,dt as tt,B as v,du as b,g as U,dv as ae,dw as ke,dx as Ot,dy as rt,h as W,am as it,dz as Me,dA as Ge,dB as We,dC as Ve,dD as re,dE as _t,dF as $e,dG as Dt,dH as T,dI as Bt,dJ as He,bT as V,dK as Ke,dL as Ut,dM as Lt,b2 as Rt,dN as ze,bE as je,dO as qe,dP as Nt,dQ as kt,dR as Je,dS as Ye,dT as se,dU as gt,dV as H,dW as yt,dX as K,dY as z,dZ as j,d_ as mt,d$ as ft,e0 as q,e1 as J,e2 as Y,e3 as Z,e4 as st,e5 as X,e6 as Ze,H as Mt,e7 as lt,e8 as ne,e9 as Xe,ea as Qe,eb as ta,ec as ut,ed as Tt,ee as ea,ef as aa,eg as ra,eh as sa,cf as na,ei as Gt,ej as ia,ek as k,el as Wt,em as oa,en as ca,eo as ie,ep as oe,eq as ce,er as da,es as de,et as la,eu as le,ev as ua,ew as ue,C as ha,ex as pa,e as Vt,ey as R,u as $t,ez as ga,bO as ya,eA as he,eB as ma,eC as fa,eD as pe,eE as wa,eF as Aa,i as ge,a as ye,eG as Ca,eH as ba,eI as Pa,eJ as va,cO as et,b0 as _a,eK as Da,eL as Ta}from"./index-4dSMX-rY.js";import{i as me}from"./url-a45219bd.browser.esm-CnlspJ3o.js";async function Ea(c,a){const t=await ht(c,a);return ct(t.abi)}async function Ia(c,a){const t=await ht(c,a);return Ue(t.abi,t.metadata)}class Fa extends ot{constructor(t,e,r){super(t,e);f(this,"updatePublisherProfile",F(async t=>{const e=this.getSigner();A(e);const r=await e.getAddress(),n=await this.storage.upload(t);return x.fromContractWrapper({contractWrapper:this.publisher,method:"setPublisherProfileUri",args:[r,n]})}));f(this,"publish",F(async(t,e)=>{const r=this.cleanupOldPublishFlowData(e),n=this.getSigner();A(n);const s=await n.getAddress(),i=await Ee(t,this.storage),o=await Ie(i.metadataUri,this.storage),d=xt(at.parse(o.abi),"PluginRouter"),u=xt(at.parse(o.abi),"DynamicContract");if(r.routerType=d?"plugin":u?"dynamic":"none",u||d){const w=r.defaultExtensions;if(w&&w.length>0)try{const C=(await Promise.all(w.map(S=>G(S.publisherAddress,S.extensionName,S.extensionVersion,this.storage,this.options.clientId,this.options.secretKey)))).map(S=>S.metadataUri),I=(await Promise.all(C.map(async S=>O(S,this.storage)))).map(S=>S.compilerMetadata.abi),dt=Fe([o.abi,...I]);r.compositeAbi=at.parse(dt)}catch{}}const l=await this.getLatest(s,i.name);if(l&&l.metadataUri){const P=(await this.fetchPublishedContractInfo(l)).publishedMetadata.version;if(!xe(P,r.version))throw Error(`Version ${r.version} is not greater than ${P}`)}const p=await(await this.storage.download(i.bytecodeUri)).text(),h=p.startsWith("0x")?p:`0x${p}`,y=Se(["bytes"],[h]),m=i.name,g=await Oe.parseAsync({...r,metadataUri:i.metadataUri,bytecodeUri:i.bytecodeUri,name:i.name,analytics:i.analytics,publisher:s}),D=await this.storage.upload(g);return x.fromContractWrapper({contractWrapper:this.publisher,method:"publishContract",args:[s,m,D,i.metadataUri,y,N],parse:w=>{const P=this.publisher.parseLogs("ContractPublished",w.logs);if(P.length<1)throw new Error("No ContractPublished event found");const C=P[0].args.publishedContract;return{receipt:w,data:async()=>this.toPublishedContract(C)}}})}));f(this,"unpublish",F(async(t,e)=>{const r=await _(t);return x.fromContractWrapper({contractWrapper:this.publisher,method:"unpublishContract",args:[r,e]})}));this.storage=r,this.publisher=new Q(t,Zt(),De,e,r)}updateSignerOrProvider(t){super.updateSignerOrProvider(t),this.publisher.updateSignerOrProvider(t)}async extractConstructorParams(t){return Ea(t,this.storage)}async extractFunctions(t){return Ia(t,this.storage)}async fetchCompilerMetadataFromPredeployURI(t){return ht(t,this.storage)}async fetchPrePublishMetadata(t,e){const r=await ht(t,this.storage),n=e?await this.getLatest(e,r.name):void 0,s=n?await this.fetchPublishedContractInfo(n):void 0;return{preDeployMetadata:r,latestPublishedContractMetadata:s}}async fetchCompilerMetadataFromAddress(t){const e=await _(t);return pt(e,this.getProvider(),this.storage,this.options)}async fetchPublishedContractInfo(t){return{name:t.id,publishedTimestamp:t.timestamp,publishedMetadata:await this.fetchFullPublishMetadata(t.metadataUri)}}async fetchFullPublishMetadata(t){return Xt(t,this.storage)}async resolvePublishMetadataFromCompilerMetadata(t){const e=await this.publisher.read("getPublishedUriFromCompilerUri",[t]);if(e.length===0)throw Error(`Could not resolve published metadata URI from ${t}`);return await Promise.all(e.filter(r=>r.length>0).map(r=>this.fetchFullPublishMetadata(r)))}async resolveContractUriFromAddress(t){const e=await _(t),r=await Qt(e,this.getProvider());return A(r),r}async fetchContractSourcesFromAddress(t){const e=await _(t),r=await this.fetchCompilerMetadataFromAddress(e);return await te(r,this.storage)}async fetchContractAbiFromAddress(t){const e=await _(t);return(await pt(e,this.getProvider(),this.storage)).abi}async getPublisherProfile(t){const e=await _(t),r=await this.publisher.read("getPublisherProfileUri",[e]);return!r||r.length===0?{}:Te.parse(await this.storage.downloadJSON(r))}async getAll(t){const e=await _(t),n=(await this.publisher.read("getAllPublishedContracts",[e])).reduce((s,i)=>(s[i.contractId]=i,s),{});return Object.entries(n).map(s=>{let[,i]=s;return this.toPublishedContract(i)})}async getAllVersions(t,e){const r=await _(t),n=await this.publisher.read("getPublishedContractVersions",[r,e]);if(n.length===0)throw Error("Not found");return n.map(s=>this.toPublishedContract(s))}async getVersion(t,e){let r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"latest";const n=await _(t);if(r==="latest")return this.getLatest(n,e);const s=await this.getAllVersions(n,e),o=(await Promise.all(s.map(d=>this.fetchPublishedContractInfo(d)))).find(d=>d.publishedMetadata.version===r);return A(o),s.find(d=>d.timestamp===o.publishedTimestamp)}async getLatest(t,e){const r=await _(t),n=await this.publisher.read("getPublishedContract",[r,e]);if(n&&n.publishMetadataUri)return this.toPublishedContract(n)}toPublishedContract(t){return Be.parse({id:t.contractId,timestamp:t.publishTimestamp,metadataUri:t.publishMetadataUri})}cleanupOldPublishFlowData(t){return t.compositeAbi&&delete t.compositeAbi,{...t,isDeployableViaFactory:!1,isDeployableViaProxy:!1,factoryDeploymentData:{...t.factoryDeploymentData,implementationAddresses:{},factoryAddresses:{}}}}}function wt(c){return"("+c.map(a=>a.type==="tuple"?wt(a.components):a.type==="tuple[]"?wt(a.components)+"[]":a.type).join(",")+")"}function xa(c,a){const t=new Et(a),e=[];for(const r of Object.values(t.functions)){const n=t.getFunction(t.getSighash(r));n.name.includes("_")||e.push({functionSelector:t.getSighash(n),functionSignature:n.name+wt(n.inputs),pluginAddress:c})}return e}function Sa(c){const a=new Et(c),t=[];for(const e of Object.values(a.functions)){const r=a.getFunction(a.getSighash(e));r.name.startsWith("_")||t.push({functionSelector:a.getSighash(r),functionSignature:r.name+wt(r.inputs)})}return t}async function At(c,a,t,e,r,n){St.deploymentPresets={};const[s,{compilerMetadata:i,extendedMetadata:o}]=await Promise.all([e||$(t),O(c,a)]),d={},u=[],l=o==null?void 0:o.defaultExtensions;if((o==null?void 0:o.routerType)==="plugin"&&l){A(r||n);const y=await Promise.all(l.map(P=>G(P.publisherAddress,P.extensionName,P.extensionVersion,a,r,n))),m=(await Promise.all(y.map(P=>O(P.metadataUri,a)))).map(P=>P.compilerMetadata),g=await Promise.all(m.map(P=>M("plugin",t,a,s,{metadata:P},r,n))),D=[];m.forEach((P,C)=>{const I=xa(g[C].transaction.predictedAddress,P.abi);D.push(...I)});const w=await M("plugin",t,a,s,{contractName:"PluginMap",constructorParams:{_pluginsToAdd:{value:D}}},r,n);d._pluginMap={value:w.transaction.predictedAddress},u.push(...g,w)}else if((o==null?void 0:o.routerType)==="dynamic"&&l){A(r||n);const y=await Promise.all(l.map(w=>G(w.publisherAddress,w.extensionName,w.extensionVersion,a,r,n))),m=(await Promise.all(y.map(async w=>O(w.metadataUri,a)))).map(w=>w.compilerMetadata),g=await Promise.all(m.map(w=>M("extension",t,a,s,{metadata:w},r,n))),D=[];m.forEach((w,P)=>{const C=Sa(w.abi);D.push({metadata:{name:w.name,metadataURI:"",implementation:g[P].transaction.predictedAddress},functions:C})}),d._extensions={value:D},u.push(...g)}const[p,h]=await Promise.all([M("implementation",t,a,s,{metadata:i,constructorParams:d},r,n),M("infra",t,a,s,{contractName:"TWCloneFactory"},r,n)]);return u.push(h),u.push(...Object.values(St.deploymentPresets)),u.push(p),u}function Oa(c){let a=It(c).map(t=>t===0?4:16).reduce((t,e)=>t+e)+200*c.length/2+6*Math.ceil(c.length/64)+32e3+21e3;return a=Math.floor(a*64/63),a}function fe(c){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Le;if(c=c.filter(n=>n.data.length>0),c.length===0)return[];const t=[];let e=0,r=[];return c.forEach(n=>{const s=Oa(n.data);e+s>a?r.length===0?t.push([n]):(t.push(r),e=s,r=[n]):(e+=s,r.push(n))}),r.length>0&&t.push(r),t}async function Ba(c,a,t){var n,s;const e=fe(a);if(e.length===0)return;(n=t==null?void 0:t.notifier)==null||n.call(t,"deploying","infra");const r=await Promise.all(e.map(i=>new ee(Re,Ne).connect(c).deploy(i)));await Promise.all(r.map(i=>i.deployed())),(s=t==null?void 0:t.notifier)==null||s.call(t,"deployed","infra")}async function Ua(c,a,t){var n,s;let e=arguments.length>3&&arguments[3]!==void 0?arguments[3]:7e6;if(A(c.provider),!await tt(a.predictedAddress,c.provider)){console.debug(`deploying contract via create2 factory at: ${a.predictedAddress}`);const i={to:a.to,data:a.data};try{await c.estimateGas(i)}catch(o){console.debug("error estimating gas while deploying prebuilt: ",o),i.gasLimit=v.from(e)}(n=t==null?void 0:t.notifier)==null||n.call(t,"deploying","preset"),await(await c.sendTransaction(i)).wait(),(s=t==null?void 0:t.notifier)==null||s.call(t,"deployed","preset")}}let Ht=!1;function La(c,a,t){Ht||(Ht=!0,!(a||t)&&console.warn(c))}async function Ra(c,a,t){var y;let e=arguments.length>3&&arguments[3]!==void 0?arguments[3]:"latest",r=arguments.length>4?arguments[4]:void 0,n=arguments.length>5?arguments[5]:void 0,s=arguments.length>6?arguments[6]:void 0;const i=U(a,{clientId:r,secretKey:n}),d=(await G(de,c,e,t,r,n)).metadataUri,u=await O(d,t),l=await $(i);A(l);const{extendedMetadata:p}=await O(d,t);let h;return(p==null?void 0:p.routerType)==="plugin"||(p==null?void 0:p.routerType)==="dynamic"?h=(y=(await At(d,t,i,l,r,n)).find(g=>g.type==="implementation"))==null?void 0:y.encodedArgs:h=await la(u.compilerMetadata,i,t,l,s,r,n),h}async function Na(c,a,t){var p;let e=arguments.length>3&&arguments[3]!==void 0?arguments[3]:"latest",r=arguments.length>4?arguments[4]:void 0,n=arguments.length>5?arguments[5]:void 0;const s=U(a,{clientId:r,secretKey:n}),o=(await G(de,c,e,t,r,n)).metadataUri,d=await $(s);A(d);const{extendedMetadata:u}=await O(o,t);if((u==null?void 0:u.routerType)==="plugin"||(u==null?void 0:u.routerType)==="dynamic"){const y=(p=(await At(o,t,s,d,r,n)).find(m=>m.type==="implementation"))==null?void 0:p.transaction.predictedAddress;return A(y),y}return(await M("implementation",s,t,d,{contractName:c},r,n)).transaction.predictedAddress}async function ka(c,a,t){let e=arguments.length>3&&arguments[3]!==void 0?arguments[3]:"latest",r=arguments.length>4?arguments[4]:void 0,n=arguments.length>5?arguments[5]:void 0;const s=U(a,{clientId:r,secretKey:n}),i=await Na(c,a,t,e,r,n),o=await tt(i,s);return A(o),i}const Ma={FAILED:"Fail - Unable to verify",SUCCESS:"Pass - Verified",PENDING:"Pending in queue",ALREADY_VERIFIED:"Contract source code already verified",AUTOMATICALLY_VERIFIED:"Already Verified"},we={OK:"1",NOTOK:"0"};async function Ga(c,a,t,e,r){let n=arguments.length>5&&arguments[5]!==void 0?arguments[5]:"latest",s=arguments.length>6?arguments[6]:void 0,i=arguments.length>7?arguments[7]:void 0,o=arguments.length>8?arguments[8]:void 0;const d=await ka(c,a,r,n,s,i),u=await Ra(c,a,r,n,s,i,o);return console.info(`Verifying ${c} at address ${d}`),await Ae(d,a,t,e,r,u==null?void 0:u.toString().replace("0x",""))}async function Ae(c,a,t,e,r,n){try{const s=U(a,{});c=(await aa(c,s)).address;const i=await pt(c,s,r),o=i.metadata.compiler.version,d=await te(i,r),u=i.metadata.sources,l={};for(const I of Object.keys(u)){const dt=d.find(S=>I===S.filename);if(!dt)throw new Error(`Could not find source file for ${I}`);l[I]={content:dt.source}}const p={language:"Solidity",sources:l,settings:{optimizer:i.metadata.settings.optimizer,evmVersion:i.metadata.settings.evmVersion,remappings:i.metadata.settings.remappings,outputSelection:{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},h=i.metadata.settings.compilationTarget,m=Object.keys(h)[0],g=n||await Wa(t,e,c,i.abi,s,r),D={apikey:e,module:"contract",action:"verifysourcecode",contractaddress:c,sourceCode:JSON.stringify(p),codeformat:"solidity-standard-json-input",contractname:`${m}:${i.name}`,compilerversion:`v${o}`,constructorArguements:g},w=new URLSearchParams({...D}),C=await(await fetch(t,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:w.toString()})).json();if(C.status===we.OK)return C.result;throw new Error(`${C.result}`)}catch(s){throw new Error(s.toString())}}async function Kt(c,a,t){const e=`${c}?module=contract&action=checkverifystatus&guid=${t}&apikey=${a}"`;return new Promise((r,n)=>{const s=setInterval(async()=>{try{const o=await(await fetch(e,{method:"GET"})).json();(o==null?void 0:o.result)!==Ma.PENDING&&(clearInterval(s),r(o))}catch(i){clearInterval(s),n(i)}},3e3)})}async function Wa(c,a,t,e,r,n){const s=ct(e);if(s.length===0)return"";const o=await(await fetch(`${c}?module=contract&action=getcontractcreation&contractaddresses=${t}&apikey=${a}`)).json();if(o&&o.status===we.OK&&o.result[0]!==void 0){const d=new Et(e),u=o.result[0].txHash;let l="";if(d.deploy.inputs.length===0)return"";const p=await r.getTransaction(u),h=p.data;try{const y=await Va(t,r,n);if(y){const m=y.startsWith("0x")?y:`0x${y}`;let g;try{g=await $(r)}catch{}const D=p.to===g?64:0;l=h.substring(m.length+D)}}catch{}if(!l){const y=[...h.matchAll(/(64736f6c6343[\w]{6}[\w]{4})(?!.*\1)(.*)$/g)];y.length>0&&(l=y[0][2])}if(!l){const y=s.length*64;l=h.substring(h.length-y)}try{V.decode(d.deploy.inputs,`0x${l}`)}catch{throw new Error("Verifying this contract requires it to be published. Run `npx thirdweb publish` to publish this contract, then try again.")}return l}else return""}async function Va(c,a,t){const e=await Qt(c,a);if(e){const r=(await W(async()=>{const{default:o}=await import("./index-4dSMX-rY.js").then(d=>d.iw);return{default:o}},__vite__mapDeps([0,1]))).default,s=await new it(Zt(),r,U("polygon",{})).getPublishedUriFromCompilerUri(e);if(s.length===0)throw Error(`Could not resolve published metadata URI from ${e}`);const i=await Promise.all(s.filter(o=>o.length>0).map(o=>Xt(o,t)));return i.length>0?await(await t.download(i[0].bytecodeUri)).text():void 0}}class $a extends ot{constructor(a,t,e){super(a,t),this.storage=e}updateSignerOrProvider(a){super.updateSignerOrProvider(a)}async verifyThirdwebContract(a,t,e){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:"latest",n=arguments.length>4?arguments[4]:void 0;const s=(await this.getProvider().getNetwork()).chainId,i=await Ga(a,s,t,e,this.storage,r,this.options.clientId,this.options.secretKey,n);console.info("Checking verification status...");const o=await Kt(t,e,i);console.info(o)}async verifyContract(a,t,e,r){const n=(await this.getProvider().getNetwork()).chainId;let s;if(r){const d=Object.values(r).map(l=>(A(l.type),l.type)),u=Object.values(r).map(l=>l.value);s=V.encode(d,u)}const i=await Ae(a,n,t,e,this.storage,s);console.info("Checking verification status...");const o=await Kt(t,e,i);console.info(o)}}const Ce="0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80";class Ft{constructor(a,t,e){f(this,"events",new Dt);this.connection=new ot(a,t),this.options=t,this.events=new Dt,this.storage=e}connect(a){this.connection.updateSignerOrProvider(a),this.events.emit("signerChanged",this.connection.getSigner())}async transfer(a,t){let e=arguments.length>2&&arguments[2]!==void 0?arguments[2]:_t;const[r,n,s]=await Promise.all([_(a),_(e),Ke(this.connection.getProvider(),t,e)]),i=this.requireWallet();if(Ut(n)){const o=await i.getAddress(),d=Lt()?{}:await Rt(this.connection.getProvider());return{receipt:await(await i.sendTransaction({from:o,to:r,value:s,...d})).wait()}}else{const o=(await W(async()=>{const{default:d}=await import("./index-4dSMX-rY.js").then(u=>u.ir);return{default:d}},__vite__mapDeps([0,1]))).default;return{receipt:await this.createErc20(n,o).sendTransaction("transfer",[r,s])}}}async balance(){let a=arguments.length>0&&arguments[0]!==void 0?arguments[0]:_t;this.requireWallet();const t=await _(a),e=this.connection.getProvider();let r;if(Ut(t))r=await e.getBalance(await this.getAddress());else{const n=(await W(async()=>{const{default:s}=await import("./index-4dSMX-rY.js").then(i=>i.ir);return{default:s}},__vite__mapDeps([0,1]))).default;r=await this.createErc20(t,n).read("balanceOf",[await this.getAddress()])}return await re(e,t,r)}async getAddress(){return await this.requireWallet().getAddress()}async getChainId(){return await this.requireWallet().getChainId()}async getNonce(a){return await this.connection.getProvider().getTransactionCount(await this.getAddress(),a)}isConnected(){try{return this.requireWallet(),!0}catch{return!1}}async sign(a){return await this.requireWallet().signMessage(a)}async signTypedData(a,t,e){return await ze(this.requireWallet(),a,t,e)}recoverAddress(a,t){const e=je(a),r=It(e);return qe(r,t)}async sendRawTransaction(a){const t=this.requireWallet();return a={...Lt()?{}:await Rt(this.connection.getProvider()),...a},t.sendTransaction(a)}async executeRawTransaction(a){return{receipt:await(await this.sendRawTransaction(a)).wait()}}async requestFunds(a){const t=await this.getChainId();if(t===b.Localhost||t===b.Hardhat)return new Ft(new ae(Ce,U(t,this.options)),this.options,this.storage).transfer(await this.getAddress(),a);throw new Error(`Requesting funds is not supported on chain: '${t}'.`)}requireWallet(){const a=this.connection.getSigner();return A(a),a}createErc20(a,t){return new Q(this.connection.getSignerOrProvider(),a,t,this.options,this.storage)}}function Ha(c){const a=[];return ra(sa(c),a),a.map(t=>t.name)}function zt(c){return Ha(c)}function Ka(c,a){return c||(a!=null&&a.gatewayUrls?new Nt({gatewayUrls:a.gatewayUrls,clientId:a.clientId,secretKey:a.secretKey}):new Nt({clientId:a==null?void 0:a.clientId,secretKey:a==null?void 0:a.secretKey}))}class za{constructor(a,t){f(this,"addContract",F(async a=>{const t=await this.registryRouter.getSignerAddress();return x.fromContractWrapper({contractWrapper:this.registryLogic,method:"add",args:[t,a.address,a.chainId,a.metadataURI||""]})}));f(this,"addContracts",F(async a=>{const t=await this.registryRouter.getSignerAddress(),e=[],r=new gt(this.registryLogic);return a.forEach(n=>{e.push(r.encode("add",[t,n.address,n.chainId,n.metadataURI||""]))}),x.fromContractWrapper({contractWrapper:this.registryRouter,method:"multicall",args:[e]})}));f(this,"removeContract",F(async a=>{const t=await this.registryRouter.getSignerAddress();return x.fromContractWrapper({contractWrapper:this.registryLogic,method:"remove",args:[t,await _(a.address),a.chainId]})}));f(this,"removeContracts",F(async a=>{const t=await this.registryRouter.getSignerAddress(),e=new gt(this.registryLogic),r=await Promise.all(a.map(async n=>e.encode("remove",[t,await _(n.address),n.chainId])));return x.fromContractWrapper({contractWrapper:this.registryRouter,method:"multicall",args:[r]})}));let e=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};this.storage=t,this.registryLogic=new Q(a,kt(),Je,e,t),this.registryRouter=new Q(a,kt(),Ye,e,t)}async updateSigner(a){this.registryLogic.updateSignerOrProvider(a),this.registryRouter.updateSignerOrProvider(a)}async getContractMetadataURI(a,t){return await this.registryLogic.read("getMetadataUri",[a,await _(t)])}async getContractMetadata(a,t){const e=await this.getContractMetadataURI(a,t);if(!e)throw new Error(`No metadata URI found for contract ${t} on chain ${a}`);return await this.storage.downloadJSON(e)}async getContractAddresses(a){return(await this.registryLogic.read("getAll",[await _(a)])).filter(t=>se(t.deploymentAddress)&&t.deploymentAddress.toLowerCase()!==N).map(t=>({address:t.deploymentAddress,chainId:t.chainId.toNumber()}))}}function jt(c,a){const t=at.parse(c||[]);for(const e of t)if(e.type==="function"&&e.name===a)return e.inputs||[];return[]}async function ja(c,a,t,e,r){return t||(t=await $(c)),(await M("infra",c,a,t,{contractName:"TWCloneFactory"},e,r)).transaction.predictedAddress}function nt(c,a){if(c.length!==a.length)throw Error(`Passed the wrong number of constructor arguments: ${a.length}, expected ${c.length}`);return c.map((t,e)=>t==="tuple"||t.endsWith("[]")?typeof a[e]=="string"?JSON.parse(a[e]):a[e]:t==="bytes32"?(A(Tt(a[e]),`Could not parse bytes32 value. Expected valid hex string but got "${a[e]}".`),na(a[e],32)):t.startsWith("bytes")?(A(Tt(a[e]),`Could not parse bytes value. Expected valid hex string but got "${a[e]}".`),a[e]):t.startsWith("uint")||t.startsWith("int")?v.from(a[e].toString()):a[e])}async function be(c,a){var o,d,u,l;if(A(c.provider),await tt(Gt,c.provider))return Gt;const e=await ia(c.provider),r=(await c.provider.getNetwork()).chainId,n=e?r:0;console.debug(`ChainId ${r} enforces EIP155: ${e}`);const s=k[r]?Wt(n,{gasPrice:k[r].gasPrice,gasLimit:k[r].gasLimit}):Wt(n,{});if(!await tt(s.deployment,c.provider)){const p=(o=k[r])!=null&&o.gasPrice?k[r].gasPrice:1e11,h=(d=k[r])!=null&&d.gasLimit?k[r].gasLimit:1e5;A(h),A(p);const y=v.from(p).mul(h);(await c.provider.getBalance(s.signer)).lt(y)&&await(await c.sendTransaction({to:s.signer,value:y})).wait();try{console.debug(`deploying CREATE2 factory at: ${s.deployment}`),(u=a==null?void 0:a.notifier)==null||u.call(a,"deploying","create2Factory"),await(await c.provider.sendTransaction(s.transaction)).wait(),(l=a==null?void 0:a.notifier)==null||l.call(a,"deployed","create2Factory")}catch(m){throw new Error(`Couldn't deploy CREATE2 factory: ${JSON.stringify(m)}`)}}return s.deployment}b.Mainnet,b.Goerli,b.Polygon,b.Mumbai,b.Fantom,b.FantomTestnet,b.Avalanche,b.AvalancheFujiTestnet,b.Optimism,b.OptimismGoerli,b.Arbitrum,b.ArbitrumGoerli,b.BinanceSmartChainMainnet,b.BinanceSmartChainTestnet,b.Hardhat,b.Localhost;function E(c,a){return a===N?c:a}async function Pe(c,a,t,e,r){const n=await e.getAddress(),s=[];switch(a.trusted_forwarders&&a.trusted_forwarders.length>0&&s.push(...a.trusted_forwarders),c){case H.contractType:case yt.contractType:const i=await H.schema.deploy.parseAsync(a);return[n,i.name,i.symbol,t,s,E(n,i.primary_sale_recipient),i.fee_recipient,i.seller_fee_basis_points,i.platform_fee_basis_points,E(n,i.platform_fee_recipient)];case K.contractType:const o=await K.schema.deploy.parseAsync(a);return[n,o.name,o.symbol,t,s,E(n,o.primary_sale_recipient),o.fee_recipient,o.seller_fee_basis_points,o.platform_fee_basis_points,E(n,o.platform_fee_recipient)];case z.contractType:const d=await z.schema.deploy.parseAsync(a);return[n,d.name,d.symbol,t,s,d.fee_recipient,d.seller_fee_basis_points];case j.contractType:case mt.contractType:const u=await j.schema.deploy.parseAsync(a);return[n,u.name,u.symbol,t,s,E(n,u.primary_sale_recipient),u.fee_recipient,u.seller_fee_basis_points,u.platform_fee_basis_points,E(n,u.platform_fee_recipient)];case ft.contractType:case q.contractType:const l=await q.schema.deploy.parseAsync(a);return[n,l.name,l.symbol,t,s,E(n,l.primary_sale_recipient),E(n,l.platform_fee_recipient),l.platform_fee_basis_points];case J.contractType:const p=await J.schema.deploy.parseAsync(a);return[p.name,t,s,p.voting_token_address,p.voting_delay_in_blocks,p.voting_period_in_blocks,v.from(p.proposal_token_threshold),p.voting_quorum_fraction];case Y.contractType:const h=await Y.schema.deploy.parseAsync(a);return[n,t,s,h.recipients.map(g=>g.address),h.recipients.map(g=>v.from(g.sharesBps))];case Z.contractType:case st.contractType:const y=await Z.schema.deploy.parseAsync(a);return[n,t,s,E(n,y.platform_fee_recipient),y.platform_fee_basis_points];case X.contractType:const m=await X.schema.deploy.parseAsync(a);return[n,m.name,m.symbol,t,s,m.fee_recipient,m.seller_fee_basis_points];default:return[]}}const qt={[b.Mainnet]:{"nft-drop":"0x60fF9952e0084A6DEac44203838cDC91ABeC8736","edition-drop":"0x74af262d0671F378F97a1EDC3d0970Dbe8A1C550","token-drop":"0xE1eE43D23f247b6A9aF81fcE2766E76709482728","signature-drop":"0x6fD690EB509BdE4C50028C5D9C0dE3750C2Fad6A"},[b.Polygon]:{"nft-drop":"0xB96508050Ba0925256184103560EBADA912Fcc69","edition-drop":"0x74af262d0671F378F97a1EDC3d0970Dbe8A1C550","token-drop":"0x5A8eA4Adad8289746D073947BA06D69A62499aaf","signature-drop":"0xBE2fDc35410E268e41Bec62DBb01AEb43245c7d5"},[b.Fantom]:{"nft-drop":"0x2A396b2D90BAcEF19cDa973586B2633d22710fC2","edition-drop":"0x06395FCF9AC6ED827f9dD6e776809cEF1Be0d21B","token-drop":"0x0148b28a38efaaC31b6aa0a6D9FEb70FE7C91FFa","signature-drop":"0xe135Ef65C2B2213C3fD56d0Bd6500A2cA147aC10"},[b.Avalanche]:{"nft-drop":"0x9cF91118C8ee2913F0588e0F10e36B3d63F68bF6","edition-drop":"0x135fC9D26E5eC51260ece1DF4ED424E2f55c7766","token-drop":"0xca0B071899E575BA86495D46c5066971b6f3A901","signature-drop":"0x1d47526C3292B0130ef0afD5F02c1DA052A017B3"},[b.Optimism]:{"nft-drop":"0xFBd7D24d80ee005671E731a7287DEB6073264dD1","edition-drop":"0xe135Ef65C2B2213C3fD56d0Bd6500A2cA147aC10","token-drop":"0x902Dd246e66d8C3CE652375a723F2a52b43b9AAE","signature-drop":"0x8a4cd3549e548bbEEb38C16E041FFf040a5acabD"},[b.Arbitrum]:{"nft-drop":"0xC4903c1Ff5367b9ac2c349B63DC2409421AaEE2a","edition-drop":"0xCcddcec1831646Beff2753249f1B9C580327E89F","token-drop":"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9","signature-drop":"0x2dF9851af45dd41C8584ac55D983C604da985Bc7"},[b.BinanceSmartChainMainnet]:{"nft-drop":"0x902Dd246e66d8C3CE652375a723F2a52b43b9AAE","edition-drop":"0x2A396b2D90BAcEF19cDa973586B2633d22710fC2","token-drop":"0xe135Ef65C2B2213C3fD56d0Bd6500A2cA147aC10","signature-drop":"0xFBd7D24d80ee005671E731a7287DEB6073264dD1"},[b.Goerli]:{"nft-drop":"0xD11c97DD5F5546B5bBd630D7D1d7327481B0b92C","edition-drop":"0x5A8eA4Adad8289746D073947BA06D69A62499aaf","token-drop":"0x5680933221B752EB443654a014f88B101F868d50","signature-drop":"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9"},[b.Mumbai]:{"nft-drop":"0xC4903c1Ff5367b9ac2c349B63DC2409421AaEE2a","edition-drop":"0xCcddcec1831646Beff2753249f1B9C580327E89F","token-drop":"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9","signature-drop":"0x2dF9851af45dd41C8584ac55D983C604da985Bc7"},[b.FantomTestnet]:{"nft-drop":"0x8a4cd3549e548bbEEb38C16E041FFf040a5acabD","edition-drop":"0x902Dd246e66d8C3CE652375a723F2a52b43b9AAE","token-drop":"0xFBd7D24d80ee005671E731a7287DEB6073264dD1","signature-drop":"0x5A8eA4Adad8289746D073947BA06D69A62499aaf"},[b.AvalancheFujiTestnet]:{"nft-drop":"0xD11c97DD5F5546B5bBd630D7D1d7327481B0b92C","edition-drop":"0xE1eE43D23f247b6A9aF81fcE2766E76709482728","token-drop":"0x6fD690EB509BdE4C50028C5D9C0dE3750C2Fad6A","signature-drop":"0xCcddcec1831646Beff2753249f1B9C580327E89F"},[b.OptimismGoerli]:{"nft-drop":"0xCcddcec1831646Beff2753249f1B9C580327E89F","edition-drop":"0x6fD690EB509BdE4C50028C5D9C0dE3750C2Fad6A","token-drop":"0xD11c97DD5F5546B5bBd630D7D1d7327481B0b92C","signature-drop":"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9"},[b.ArbitrumGoerli]:{"nft-drop":"0x9CfE807a5b124b962064Fa8F7FD823Cc701255b6","edition-drop":"0x9cF91118C8ee2913F0588e0F10e36B3d63F68bF6","token-drop":"0x1d47526C3292B0130ef0afD5F02c1DA052A017B3","signature-drop":"0xE1eE43D23f247b6A9aF81fcE2766E76709482728"},[b.BinanceSmartChainTestnet]:{"nft-drop":"","edition-drop":"","token-drop":"","signature-drop":""},[b.Hardhat]:{"nft-drop":"","edition-drop":"","token-drop":"","signature-drop":""},[b.Localhost]:{"nft-drop":"","edition-drop":"","token-drop":"","signature-drop":""}};function qa(c,a){if(c in qt){const t=qt[c];if(a in t)return t[a]}return null}class Jt extends Q{constructor(t,e,r,n){super(e,t,Ze,n,r);f(this,"DEFAULT_VERSION_MAP",{[H.contractType]:3,[yt.contractType]:1,[K.contractType]:4,[z.contractType]:1,[j.contractType]:2,[mt.contractType]:1,[ft.contractType]:2,[q.contractType]:1,[J.contractType]:1,[Y.contractType]:1,[Z.contractType]:2,[st.contractType]:3,[X.contractType]:2});f(this,"deploy",F(async(t,e,r,n,s,i)=>{const o=rt[t],d=await o.schema.deploy.parseAsync(e),u=await this.storage.upload(d),l=await this.getImplementation(o,n)||void 0;if(!l||l===N)throw new Error(`No implementation found for ${t}`);const p=await o.getAbi(l,this.getProvider(),this.storage),h=this.getSigner();A(h);const y=await Pe(t,d,u,h,this.storage),m=it.getInterface(p).encodeFunctionData("initialize",y),g=await this.getProvider().getBlockNumber(),D=s!=null&&s.saltForProxyDeploy?Mt(s.saltForProxyDeploy):lt(g.toString());return x.fromContractWrapper({contractWrapper:this,method:"deployProxyByImplementation",args:[l,m,D],parse:w=>{i&&i();const P=this.parseLogs("ProxyDeployed",w.logs);if(P.length<1)throw new Error("No ProxyDeployed event found");const C=P[0].args.proxy;return r.emit("contractDeployed",{status:"completed",contractAddress:C,transactionHash:w.transactionHash}),C}})}));f(this,"deployProxyByImplementation",F(async(t,e,r,n,s,i,o)=>{const d=it.getInterface(e).encodeFunctionData(r,n),u=await this.getProvider().getBlockNumber(),l=i?Mt(i):lt(u.toString());return x.fromContractWrapper({contractWrapper:this,method:"deployProxyByImplementation",args:[t,d,l],parse:p=>{o&&o();const h=this.parseLogs("ProxyDeployed",p.logs);if(h.length<1)throw new Error("No ProxyDeployed event found");const y=h[0].args.proxy;return s.emit("contractDeployed",{status:"completed",contractAddress:y,transactionHash:p.transactionHash}),y}})}));this.storage=r}async getDeployArguments(t,e,r){let n=[];e.trusted_forwarders&&e.trusted_forwarders.length>0&&(n=e.trusted_forwarders);const s=await this.getSignerAddress();switch(t){case H.contractType:case yt.contractType:const i=await H.schema.deploy.parseAsync(e);return[s,i.name,i.symbol,r,n,E(s,i.primary_sale_recipient),i.fee_recipient,i.seller_fee_basis_points,i.platform_fee_basis_points,E(s,i.platform_fee_recipient)];case K.contractType:const o=await K.schema.deploy.parseAsync(e);return[s,o.name,o.symbol,r,n,E(s,o.primary_sale_recipient),o.fee_recipient,o.seller_fee_basis_points,o.platform_fee_basis_points,E(s,o.platform_fee_recipient)];case z.contractType:const d=await z.schema.deploy.parseAsync(e);return[s,d.name,d.symbol,r,n,d.fee_recipient,d.seller_fee_basis_points];case j.contractType:case mt.contractType:const u=await j.schema.deploy.parseAsync(e);return[s,u.name,u.symbol,r,n,E(s,u.primary_sale_recipient),u.fee_recipient,u.seller_fee_basis_points,u.platform_fee_basis_points,E(s,u.platform_fee_recipient)];case ft.contractType:case q.contractType:const l=await q.schema.deploy.parseAsync(e);return[s,l.name,l.symbol,r,n,E(s,l.primary_sale_recipient),E(s,l.platform_fee_recipient),l.platform_fee_basis_points];case J.contractType:const p=await J.schema.deploy.parseAsync(e);return[p.name,r,n,p.voting_token_address,p.voting_delay_in_blocks,p.voting_period_in_blocks,v.from(p.proposal_token_threshold),p.voting_quorum_fraction];case Y.contractType:const h=await Y.schema.deploy.parseAsync(e);return[s,r,n,h.recipients.map(D=>D.address),h.recipients.map(D=>v.from(D.sharesBps))];case Z.contractType:const y=await Z.schema.deploy.parseAsync(e);return[s,r,n,E(s,y.platform_fee_recipient),y.platform_fee_basis_points];case st.contractType:const m=await st.schema.deploy.parseAsync(e);return[s,r,n,E(s,m.platform_fee_recipient),m.platform_fee_basis_points];case X.contractType:const g=await X.schema.deploy.parseAsync(e);return[s,g.name,g.symbol,r,n,g.fee_recipient,g.seller_fee_basis_points];default:return[]}}async getImplementation(t,e){const r=lt(t.name),n=await this.getChainID(),s=qa(n,t.contractType);return s&&s.length>0&&e===void 0?s:this.read("getImplementation",[r,e!==void 0?e:this.DEFAULT_VERSION_MAP[t.contractType]])}async getLatestVersion(t){const e=ne(t);if(!e)throw new Error(`Invalid contract type ${t}`);const r=lt(e);return this.read("currentVersion",[r])}}class Ja extends Q{constructor(t,e,r,n,s){super(e,t,n,s,r);f(this,"addContract",F(async t=>await this.addContracts.prepare([t])));f(this,"addContracts",F(async t=>{const e=await this.getSignerAddress(),r=new gt(this),n=(await Promise.all(t.map(s=>_(s)))).map(s=>r.encode("add",[e,s]));return x.fromContractWrapper({contractWrapper:this,method:"multicall",args:[n]})}));f(this,"removeContract",F(async t=>await this.removeContracts.prepare([t])));f(this,"removeContracts",F(async t=>{const e=await this.getSignerAddress(),r=new gt(this),n=(await Promise.all(t.map(s=>_(s)))).map(s=>r.encode("remove",[e,s]));return x.fromContractWrapper({contractWrapper:this,method:"multicall",args:[n]})}))}async getContractAddresses(t){return(await this.read("getAll",[await _(t)])).filter(e=>se(e)&&e.toLowerCase()!==N)}}const Ya=le.merge(ua).merge(ue),Za=Ya.merge(oa).merge(ca).merge(ie),Xa=le.merge(ue),bt=Xa.merge(ie);async function Qa(c,a,t,e,r){let n=arguments.length>5&&arguments[5]!==void 0?arguments[5]:7e6;A(t.provider);const s=c.startsWith("0x")?c:`0x${c}`,i=await be(t),o=ct(a),d=o.map(g=>g.type),u=nt(d,e),l=o.map(g=>g.type==="tuple[]"?oe.from(g):g.type),p=V.encode(l,u),h=ce(s,p,i,r),y=await tt(h,t.provider);let m="";if(y)throw new Error(`Contract already deployed at ${h}`);{console.debug(`deploying contract via create2 factory at: ${h}`),m=da(s,p,r);const g={to:i,data:m};try{await t.estimateGas(g)}catch(D){console.debug("error estimating gas while deploying prebuilt: ",D),g.gasLimit=v.from(n)}await(await t.sendTransaction(g)).wait()}return h}async function tr(c,a){let t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"latest",e=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,n=arguments.length>5?arguments[5]:void 0,s=arguments.length>6?arguments[6]:void 0,i=arguments.length>7?arguments[7]:void 0,o=arguments.length>8?arguments[8]:void 0,d=arguments.length>9&&arguments[9]!==void 0?arguments[9]:7e6;const u=(await G(a,c,t,n,s,i)).metadataUri,{compilerMetadata:l,extendedMetadata:p}=await O(u,n);return A((p==null?void 0:p.deployType)==="standard"),await Qa(l.bytecode,l.abi,r,e,o,d)}async function er(c,a,t,e,r){const n=c.startsWith("0x")?c:`0x${c}`,s=await $(t),i=ct(a),o=i.map(h=>h.type),d=nt(o,e),u=i.map(h=>h.type==="tuple[]"?oe.from(h):h.type),l=V.encode(u,d);return ce(n,l,s,r)}async function ar(c,a){let t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"latest",e=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,n=arguments.length>5?arguments[5]:void 0,s=arguments.length>6?arguments[6]:void 0,i=arguments.length>7?arguments[7]:void 0,o=arguments.length>8?arguments[8]:void 0;const d=(await G(a,c,t,n,s,i)).metadataUri,{compilerMetadata:u,extendedMetadata:l}=await O(d,n);return A((l==null?void 0:l.deployType)==="standard"),await er(u.bytecode,u.abi,r,e,o)}class B extends ot{constructor(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},r=arguments.length>2?arguments[2]:void 0;La("No API key. Please provide a clientId. It is required to access thirdweb's services. You can create a key at https://thirdweb.com/create-api-key",e.clientId,e.secretKey),e=Pt(t,e);super(t,e);f(this,"contractCache",new Map);ke(e==null?void 0:e.supportedChains);const i=Ka(r,e);this.storage=i,this.storageHandler=i,this.wallet=new Ft(t,e,i),this.deployer=new rr(t,e,i),this.verifier=new $a(t,e,i),this.multiChainRegistry=new za(t,this.storageHandler,this.options),this._publisher=new Fa(t,this.options,this.storageHandler)}static async fromWallet(t,e){let r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},n=arguments.length>3?arguments[3]:void 0;const s=await t.getSigner();return B.fromSigner(s,e,r,n)}static fromSigner(t,e){let r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},n=arguments.length>3?arguments[3]:void 0,s=t;if(e)try{const o=U(e,r);s=t.connect(o)}catch{}const i=new B(e||s,e?Pt(e,r):r,n);return i.updateSignerOrProvider(s),i}static fromPrivateKey(t,e){let r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},n=arguments.length>3?arguments[3]:void 0;const s=U(e,r),i=new ae(t,s);return new B(i,Pt(e,r),n)}get auth(){throw new Error(`The sdk.auth namespace has been moved to the @thirdweb-dev/auth package and is no longer available after @thirdweb-dev/sdk >= 3.7.0.
      Please visit https://portal.thirdweb.com/wallets/auth for instructions on how to switch to using the new auth package (@thirdweb-dev/auth@3.0.0).

      If you still want to use the old @thirdweb-dev/auth@2.0.0 package, you can downgrade the SDK to version 3.6.0.`)}async getNFTDrop(t){return await this.getContract(t,"nft-drop")}async getSignatureDrop(t){return await this.getContract(t,"signature-drop")}async getNFTCollection(t){return await this.getContract(t,"nft-collection")}async getEditionDrop(t){return await this.getContract(t,"edition-drop")}async getEdition(t){return await this.getContract(t,"edition")}async getTokenDrop(t){return await this.getContract(t,"token-drop")}async getToken(t){return await this.getContract(t,"token")}async getVote(t){return await this.getContract(t,"vote")}async getSplit(t){return await this.getContract(t,"split")}async getMarketplace(t){return await this.getContract(t,"marketplace")}async getMarketplaceV3(t){return await this.getContract(t,"marketplace-v3")}async getPack(t){return await this.getContract(t,"pack")}async getMultiwrap(t){return await this.getContract(t,"multiwrap")}async getContract(t,e){const r=await _(t);if(this.contractCache.has(r))return this.contractCache.get(r);if(r in Ot)return await this.getContractFromAbi(r,Ot[r]);let n;if(!e||e==="custom")try{const s=await this.getPublisher().fetchCompilerMetadataFromAddress(r);n=await this.getContractFromAbi(r,s.abi)}catch(s){const i=await this.resolveContractType(r);if(i&&i!=="custom"){const o=await rt[i].getAbi(r,this.getProvider(),this.storage);n=await this.getContractFromAbi(r,o)}else throw s}else typeof e=="string"&&e in rt?n=await rt[e].initialize(this.getSignerOrProvider(),r,this.storage,this.options):n=await this.getContractFromAbi(r,e);return this.contractCache.set(r,n),n}async getBuiltInContract(t,e){return await this.getContract(t,e)}async resolveContractType(t){try{const e=(await W(async()=>{const{default:s}=await import("./IThirdwebContract-DlcJVspb.js");return{default:s}},[])).default,r=new it(await _(t),e,this.getProvider()),n=Me(await r.contractType()).replace(/\x00/g,"");return Ge(n)}catch{return"custom"}}async getContractList(t){var n;const e=await((n=await this.deployer.getRegistry())==null?void 0:n.getContractAddresses(await _(t)))||[],r=(await this.getProvider().getNetwork()).chainId;return await Promise.all(e.map(async s=>({address:s,chainId:r,contractType:()=>this.resolveContractType(s),metadata:async()=>(await this.getContract(s)).metadata.get(),extensions:async()=>zt((await this.getContract(s)).abi)})))}async getMultichainContractList(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Xe;const r=await this.multiChainRegistry.getContractAddresses(t),n=e.reduce((i,o)=>(i[o.chainId]=o,i),{}),s={};return r.map(i=>{let{address:o,chainId:d}=i;if(!n[d])return{address:o,chainId:d,contractType:async()=>"custom",metadata:async()=>({name:""}),extensions:async()=>[]};try{let u=s[d];return u||(u=new B(d,{...this.options,readonlySettings:void 0,supportedChains:e},this.storage),s[d]=u),{address:o,chainId:d,contractType:()=>u.resolveContractType(o),metadata:async()=>(await u.getContract(o)).metadata.get(),extensions:async()=>zt((await u.getContract(o)).abi)}}catch{return{address:o,chainId:d,contractType:async()=>"custom",metadata:async()=>({name:""}),extensions:async()=>[]}}})}updateSignerOrProvider(t){super.updateSignerOrProvider(t),this.updateContractSignerOrProvider()}updateContractSignerOrProvider(){this.wallet.connect(this.getSignerOrProvider()),this.deployer.updateSignerOrProvider(this.getSignerOrProvider()),this._publisher.updateSignerOrProvider(this.getSignerOrProvider()),this.multiChainRegistry.updateSigner(this.getSignerOrProvider()),this.verifier.updateSignerOrProvider(this.getSignerOrProvider());for(const[,t]of this.contractCache)t.onNetworkUpdated(this.getSignerOrProvider())}async getContractFromAbi(t,e){const[r,{SmartContract:n}]=await Promise.all([_(t),W(()=>import("./smart-contract-4f279559.browser.esm-l86b2WJA.js"),__vite__mapDeps([2,3,0,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]))]);if(this.contractCache.has(r))return this.contractCache.get(r);const[,s]=We(this.getSignerOrProvider(),this.options),i=typeof e=="string"?JSON.parse(e):e,o=new n(this.getSignerOrProvider(),r,await Ve(r,at.parse(i),s,this.options,this.storage),this.storageHandler,this.options,(await s.getNetwork()).chainId);return this.contractCache.set(r,o),o}async getBalance(t){return re(this.getProvider(),_t,await this.getProvider().getBalance(await _(t)))}getPublisher(){return this._publisher}}function Pt(c,a){return $e(c)&&(a={...a,supportedChains:[c,...(a==null?void 0:a.supportedChains)||[]]}),a}const L="0xdd99b75f095d0c4d5112aCe938e4e6ed962fb024";class rr extends ot{constructor(t,e,r){super(t,e);f(this,"transactionListener",t=>{t.status==="submitted"&&this.events.emit("contractDeployed",{status:"submitted",transactionHash:t.transactionHash})});f(this,"deployNFTCollection",T(async(t,e)=>await this.deployBuiltInContract.prepare(yt.contractType,t,"latest",e)));f(this,"deployNFTDrop",T(async(t,e)=>await this.deployBuiltInContract.prepare(H.contractType,t,"latest",e)));f(this,"deployLoyaltyCard",T(async(t,e)=>{var d;const r=await Za.parseAsync(t),n=await this.storage.upload(r),s=[];t.trusted_forwarders&&t.trusted_forwarders.length>0&&s.push(...t.trusted_forwarders);const o=[await((d=this.getSigner())==null?void 0:d.getAddress()),r.name,r.symbol,n,s,r.primary_sale_recipient,r.fee_recipient,r.seller_fee_basis_points,r.platform_fee_basis_points,r.platform_fee_recipient];return await this.deployReleasedContract.prepare(L,"LoyaltyCard",o,"latest",e)}));f(this,"deployOpenEdition",T(async(t,e)=>{var d;const r=await Qe.deploy.parseAsync(t),n=await this.storage.upload(r),s=[];t.trusted_forwarders&&t.trusted_forwarders.length>0&&s.push(...t.trusted_forwarders);const o=[await((d=this.getSigner())==null?void 0:d.getAddress()),r.name,r.symbol,n,s,r.primary_sale_recipient,r.fee_recipient,r.seller_fee_basis_points];return await this.deployPublishedContract.prepare(L,"OpenEditionERC721",o,"latest",e)}));f(this,"deploySignatureDrop",T(async(t,e)=>await this.deployBuiltInContract.prepare(K.contractType,t,"latest",e)));f(this,"deployMultiwrap",T(async(t,e)=>await this.deployBuiltInContract.prepare(z.contractType,t,"latest",e)));f(this,"deployEdition",T(async(t,e)=>await this.deployBuiltInContract.prepare(mt.contractType,t,"latest",e)));f(this,"deployEditionDrop",T(async(t,e)=>await this.deployBuiltInContract.prepare(j.contractType,t,"latest",e)));f(this,"deployToken",T(async(t,e)=>await this.deployBuiltInContract.prepare(q.contractType,t,"latest",e)));f(this,"deployTokenDrop",T(async(t,e)=>await this.deployBuiltInContract.prepare(ft.contractType,t,"latest",e)));f(this,"deployMarketplace",T(async(t,e)=>await this.deployBuiltInContract.prepare(Z.contractType,t,"latest",e)));f(this,"deployMarketplaceV3",T(async(t,e)=>await this.deployBuiltInContract.prepare(st.contractType,t,"latest",e)));f(this,"deployPack",T(async(t,e)=>await this.deployBuiltInContract.prepare(X.contractType,t,"latest",e)));f(this,"deploySplit",T(async(t,e)=>await this.deployBuiltInContract.prepare(Y.contractType,t,"latest",e)));f(this,"deployVote",T(async(t,e)=>await this.deployBuiltInContract.prepare(J.contractType,t,"latest",e)));f(this,"deployAirdropERC20",T(async(t,e)=>{var d;const r=await bt.parseAsync(t),n=await this.storage.upload(r),s=[];t.trusted_forwarders&&t.trusted_forwarders.length>0&&s.push(...t.trusted_forwarders);const o=[await((d=this.getSigner())==null?void 0:d.getAddress()),n,s];return await this.deployReleasedContract.prepare(L,"AirdropERC20",o,"latest",e)}));f(this,"deployAirdropERC721",T(async(t,e)=>{var d;const r=await bt.parseAsync(t),n=await this.storage.upload(r),s=[];t.trusted_forwarders&&t.trusted_forwarders.length>0&&s.push(...t.trusted_forwarders);const o=[await((d=this.getSigner())==null?void 0:d.getAddress()),n,s];return await this.deployReleasedContract.prepare(L,"AirdropERC721",o,"latest",e)}));f(this,"deployAirdropERC1155",T(async(t,e)=>{var d;const r=await bt.parseAsync(t),n=await this.storage.upload(r),s=[];t.trusted_forwarders&&t.trusted_forwarders.length>0&&s.push(...t.trusted_forwarders);const o=[await((d=this.getSigner())==null?void 0:d.getAddress()),n,s];return await this.deployReleasedContract.prepare(L,"AirdropERC1155",o,"latest",e)}));f(this,"deployBuiltInContract",T((()=>{var t=this;return async function(e,r){let n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"latest",s=arguments.length>3?arguments[3]:void 0;const i=t.getSigner();A(i);const o={app_uri:ta[e],...await rt[e].schema.deploy.parseAsync(r)};if(t.hasLocalFactory()){let h;try{h=parseInt(n),isNaN(h)&&(h=void 0)}catch{h=void 0}const y=await t.getFactory();if(!y)throw new Error("Factory not found");return y.on(ut.Transaction,t.transactionListener),y.deploy.prepare(e,o,t.events,h,s,()=>{y.off(ut.Transaction,t.transactionListener)})}const d=ne(e);A(d);const u=await t.storage.upload(o),l=await Pe(e,o,u,i,t.storage),p=await t.fetchPublishedContractFromPolygon(L,d,n);return t.deployContractFromUri.prepare(p.metadataUri,l,s)}})()));f(this,"deployReleasedContract",T((()=>{var t=this;return async function(e,r,n){let s=arguments.length>3&&arguments[3]!==void 0?arguments[3]:"latest",i=arguments.length>4?arguments[4]:void 0;const o=await t.fetchPublishedContractFromPolygon(e,r,s);return await t.deployContractFromUri.prepare(o.metadataUri,n,i)}})()));f(this,"deployPublishedContract",this.deployReleasedContract);f(this,"deployViaFactory",F(async(t,e,r,n,s,i)=>{const o=await _(t),d=await _(e),u=this.getSigner();A(u);const l=new Jt(o,this.getSignerOrProvider(),this.storage,this.options);return l.on(ut.Transaction,this.transactionListener),await l.deployProxyByImplementation.prepare(d,r,n,s,this.events,i,()=>{l.off(ut.Transaction,this.transactionListener)})}));f(this,"deployProxy",T(async(t,e,r,n)=>{const s=await _(t),i=it.getInterface(e).encodeFunctionData(r,n),{TWProxy__factory:o}=await W(async()=>{const{TWProxy__factory:d}=await import("./thirdweb-dev-contracts-js-factories-TWProxy__factory.browser.esm-BMZ2BtX5.js");return{TWProxy__factory:d}},__vite__mapDeps([22,0,1]));return this.deployContractWithAbi.prepare(o.abi,o.bytecode,[s,i])}));f(this,"deployViaAutoFactory",T(async(t,e,r,n,s,i)=>{var D,w,P;const o=await be(r,i),d=await At(t,this.storage,this.getProvider(),o,this.options.clientId,this.options.secretKey),u=(D=d.find(C=>C.type==="implementation"))==null?void 0:D.transaction.predictedAddress,l=d.filter(C=>C.transaction.data&&C.transaction.data.length>0),p=l.filter(C=>C.type!=="infra").map(C=>C.transaction),h=l.filter(C=>C.type==="infra").map(C=>C.transaction);await Ba(r,h,i);for(const C of p)try{await Ua(r,C,i)}catch(I){throw console.debug(`Error deploying contract at ${C.predictedAddress}`,I==null?void 0:I.message),I}const y=await _(u),m=await ja(this.getProvider(),this.storage,o,this.options.clientId,this.options.secretKey);(w=i==null?void 0:i.notifier)==null||w.call(i,"deploying","proxy");const g=await this.deployViaFactory.prepare(m,y,e.compilerMetadata.abi,n,s,i==null?void 0:i.saltForProxyDeploy);return(P=i==null?void 0:i.notifier)==null||P.call(i,"deployed","proxy"),g}));f(this,"deployViaCustomFactory",T(async(t,e,r,n)=>{var h,y,m,g,D,w;const s=(m=(y=(h=e.extendedMetadata)==null?void 0:h.factoryDeploymentData)==null?void 0:y.customFactoryInput)==null?void 0:m.customFactoryAddresses[n],i=await _(s);A(i),A((w=(D=(g=e.extendedMetadata)==null?void 0:g.factoryDeploymentData)==null?void 0:D.customFactoryInput)==null?void 0:w.factoryFunction);const o=await pt(i,this.getProvider(),this.storage,this.options),d=jt(o.abi,e.extendedMetadata.factoryDeploymentData.customFactoryInput.factoryFunction).map(P=>P.type),u=nt(d,t);let l;const p=await x.fromContractInfo({contractAddress:i,contractAbi:o.abi,provider:this.getProvider(),signer:r,method:e.extendedMetadata.factoryDeploymentData.customFactoryInput.factoryFunction,args:u,parse:()=>l,storage:this.storage});return l=await p.simulate(),p}));f(this,"deployContractFromUri",T(async(t,e,r)=>{var y,m;const n=this.getSigner();A(n);const{compilerMetadata:s,extendedMetadata:i}=await O(t,this.storage),o=(r==null?void 0:r.forceDirectDeploy)||!1,d=(await this.getProvider().getNetwork()).chainId,u=((y=i==null?void 0:i.networksForDeployment)==null?void 0:y.networksEnabled.includes(d))||((m=i==null?void 0:i.networksForDeployment)==null?void 0:m.allNetworks);if(i!=null&&i.networksForDeployment&&!u&&s.name!=="AccountFactory")throw new Error(`Deployments disabled on this network, with chainId: ${d}`);if(i&&i.factoryDeploymentData&&(i.isDeployableViaProxy||i.isDeployableViaFactory||i.deployType&&i.deployType!=="standard")&&!o){if(i.deployType==="customFactory")return await this.deployViaCustomFactory.prepare(e,{compilerMetadata:s,extendedMetadata:i},n,d);{A(i.factoryDeploymentData.implementationInitializerFunction);const g=jt(s.abi,i.factoryDeploymentData.implementationInitializerFunction).map(C=>C.type),D=nt(g,e),w=i.factoryDeploymentData.implementationAddresses[d];if(!w||i.deployType==="autoFactory")return await this.deployViaAutoFactory.prepare(t,{compilerMetadata:s,extendedMetadata:i},n,i.factoryDeploymentData.implementationInitializerFunction,D,r);const P=await _(w);if(A(P),i.isDeployableViaFactory){A(i.factoryDeploymentData.factoryAddresses);const C=i.factoryDeploymentData.factoryAddresses[d];A(C);const I=await _(C);return await this.deployViaFactory.prepare(I,P,s.abi,i.factoryDeploymentData.implementationInitializerFunction,D,r==null?void 0:r.saltForProxyDeploy)}else if(i.isDeployableViaProxy)return await this.deployProxy.prepare(P,s.abi,i.factoryDeploymentData.implementationInitializerFunction,D)}}const l=s.bytecode.startsWith("0x")?s.bytecode:`0x${s.bytecode}`;if(!Tt(l))throw new Error(`Contract bytecode is invalid.

${l}`);const p=ct(s.abi).map(g=>g.type),h=nt(p,e);return this.deployContractWithAbi.prepare(s.abi,l,h)}));f(this,"deployContractWithAbi",T(async(t,e,r)=>{const n=this.getSigner(),s=this.getProvider();A(n);const i=new ee(t,e).connect(n);return new ea({args:r,provider:s,signer:n,factory:i,storage:this.storage,events:this.events})}));this.storage=r,this.events=new Dt,this.getFactory(),this.getRegistry()}async getLatestBuiltInContractVersion(t){const e=await this.getFactory();if(!e)throw new Error("Factory not found");return await e.getLatestVersion(t)}async deployPublishedContractDeterministic(t,e){let r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:L,n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:"latest",s=arguments.length>4?arguments[4]:void 0;const i=this.getSigner();return A(i),tr(t,r,n,e,i,this.storage,this.options.clientId,this.options.secretKey,s)}async predictAddressDeterministic(t,e){let r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:L,n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:"latest",s=arguments.length>4?arguments[4]:void 0;const i=this.getProvider();return A(i),ar(t,r,n,e,i,this.storage,this.options.clientId,this.options.secretKey,s)}async getRegistry(){return this._registry?this._registry:this._registry=this.getProvider().getNetwork().then(async t=>{let{chainId:e}=t;const r=Bt(e,"twRegistry");if(!r)return;const n=(await W(async()=>{const{default:s}=await import("./TWRegistry-BlWzjMVY.js");return{default:s}},[])).default;return new Ja(r,this.getSignerOrProvider(),this.storage,n,this.options)})}async getFactory(){return this._factory?this._factory:this._factory=this.getProvider().getNetwork().then(async t=>{let{chainId:e}=t;const r=Bt(e,"twFactory");return r?new Jt(r,this.getSignerOrProvider(),this.storage,this.options):void 0})}updateSignerOrProvider(t){super.updateSignerOrProvider(t),this.updateContractSignerOrProvider()}updateContractSignerOrProvider(){var t,e;(t=this._factory)==null||t.then(r=>{r==null||r.updateSignerOrProvider(this.getSignerOrProvider())}).catch(()=>{}),(e=this._registry)==null||e.then(r=>{r==null||r.updateSignerOrProvider(this.getSignerOrProvider())}).catch(()=>{})}async getTransactionsForDeploy(t,e){let r=[];const n=this.getProvider();A(n);const{extendedMetadata:s}=await O(t,this.storage),i=(e==null?void 0:e.forceDirectDeploy)||!1;if(s&&s.factoryDeploymentData&&(s.isDeployableViaProxy||s.isDeployableViaFactory||s.deployType==="autoFactory")&&!i){const o=(await this.getProvider().getNetwork()).chainId;if(!s.factoryDeploymentData.implementationAddresses[o]||s.deployType==="autoFactory"){const u=await $(this.getProvider());r.push({contractType:"create2Factory",addresses:[u]});const p=(await At(t,this.storage,this.getProvider(),u,this.options.clientId,this.options.secretKey)).filter(g=>g.transaction.data&&g.transaction.data.length>0);p.filter(g=>g.type!=="infra").map(g=>g.transaction).forEach(g=>{r.push({contractType:"preset",addresses:[g.predictedAddress]})});const y=p.filter(g=>g.type==="infra").map(g=>g.transaction);fe(y).forEach(g=>{const D=g.map(w=>w.predictedAddress);r.push({contractType:"infra",addresses:D})})}r=(await Promise.all(r.map(async u=>(await Promise.all(u.addresses.map(async p=>await tt(p,n)?null:p))).filter(Boolean).length>0?u:null))).filter(Boolean),r.push({contractType:"proxy",addresses:[]})}else r.push({contractType:"custom",addresses:[]});return r}addDeployListener(t){this.events.on("contractDeployed",t)}removeDeployListener(t){this.events.off("contractDeployed",t)}removeAllDeployListeners(){this.events.removeAllListeners("contractDeployed")}async fetchPublishedContractFromPolygon(t,e,r){const n=await _(t),s=await new B("polygon",{clientId:this.options.clientId,secretKey:this.options.secretKey},this.storage).getPublisher().getVersion(n,e,r);if(!s)throw new Error(`No published contract found for '${e}' at version '${r}' by '${n}'`);return s}hasLocalFactory(){return!!He("factoryAddress")}}async function Ct(c){const a=await R(c);return Object.keys(a).map(t=>{let e=a[t];return(typeof e!="string"||!e.startsWith("0x"))&&(e=ge(e)),[t,e]}).reduce((t,e)=>{let[r,n]=e;return{...t,[r]:n}},{})}async function sr(c,a,t){const e=await R(c),r={sender:e.sender,nonce:e.nonce,initCodeHash:et(e.initCode),callDataHash:et(e.callData),callGasLimit:e.callGasLimit,verificationGasLimit:e.verificationGasLimit,preVerificationGas:e.preVerificationGas,maxFeePerGas:e.maxFeePerGas,maxPriorityFeePerGas:e.maxPriorityFeePerGas,paymasterAndDataHash:et(e.paymasterAndData)},n={components:[{type:"address",name:"sender"},{type:"uint256",name:"nonce"},{type:"bytes32",name:"initCodeHash"},{type:"bytes32",name:"callDataHash"},{type:"uint256",name:"callGasLimit"},{type:"uint256",name:"verificationGasLimit"},{type:"uint256",name:"preVerificationGas"},{type:"uint256",name:"maxFeePerGas"},{type:"uint256",name:"maxPriorityFeePerGas"},{type:"bytes32",name:"paymasterAndDataHash"}],name:"hashedUserOp",type:"tuple"},s=V.encode([n],[{...r}]),i=et(s),o=V.encode(["bytes32","address","uint256"],[i,a,t]);return et(o)}const nr=()=>{const c=BigInt(Math.floor(Math.random()*4294967296)),a=BigInt(Math.floor(Math.random()*4294967296)),t=BigInt(Math.floor(Math.random()*4294967296)),e=BigInt(Math.floor(Math.random()*4294967296)),r=BigInt(Math.floor(Math.random()*4294967296)),n=BigInt(Math.floor(Math.random()*4294967296));return c<<BigInt(160)|a<<BigInt(128)|t<<BigInt(96)|e<<BigInt(64)|r<<BigInt(32)|n},Yt=()=>{let c=nr().toString(16);return c.length%2!==0&&(c="0"+c),c="0x"+c,v.from(Ta([c,"0x0000000000000000"]))};class ir{}class or{constructor(a,t,e,r,n){this.bundlerUrl=a,this.entryPointAddress=t,this.chainId=e;const s={};if(me(this.bundlerUrl)){const i=typeof globalThis<"u"&&"APP_BUNDLE_ID"in globalThis?globalThis.APP_BUNDLE_ID:void 0;n?s["x-secret-key"]=n:r&&(s["x-client-id"]=r,i&&(s["x-bundle-id"]=i)),typeof globalThis<"u"&&"TW_AUTH_TOKEN"in globalThis&&typeof globalThis.TW_AUTH_TOKEN=="string"&&(s.authorization=`Bearer ${globalThis.TW_AUTH_TOKEN}`),typeof globalThis<"u"&&"TW_CLI_AUTH_TOKEN"in globalThis&&typeof globalThis.TW_CLI_AUTH_TOKEN=="string"&&(s.authorization=`Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`,s["x-authorize-wallet"]="true"),pe(s)}this.userOpJsonRpcProvider=new wa({url:this.bundlerUrl,headers:s},{name:"Connected bundler network",chainId:e}),this.initializing=this.validateChainId()}async validateChainId(){const a=await this.userOpJsonRpcProvider.send("eth_chainId",[]),t=parseInt(a);if(t!==this.chainId)throw new Error(`bundler ${this.bundlerUrl} is on chainId ${t}, but provider is on chainId ${this.chainId}`)}async sendUserOpToBundler(a){await this.initializing;const t=await Ct(a),e=[t,this.entryPointAddress];return await this.printUserOperation("eth_sendUserOperation",e),await this.userOpJsonRpcProvider.send("eth_sendUserOperation",[t,this.entryPointAddress])}async estimateUserOpGas(a){await this.initializing;const t=await Ct(a),e=[t,this.entryPointAddress];return await this.printUserOperation("eth_estimateUserOperationGas",e),await this.userOpJsonRpcProvider.send("eth_estimateUserOperationGas",[t,this.entryPointAddress])}async printUserOperation(a,t){}}class cr extends ir{constructor(a,t,e,r){super(),this.paymasterUrl=a,this.entryPoint=t,this.clientId=e,this.secretKey=r}async getPaymasterAndData(a){var n;const t={"Content-Type":"application/json"};if(me(this.paymasterUrl)){if(this.secretKey&&this.clientId)throw new Error("Cannot use both secret key and client ID. Please use secretKey for server-side applications and clientId for client-side applications.");this.secretKey?t["x-secret-key"]=this.secretKey:this.clientId&&(t["x-client-id"]=this.clientId,typeof globalThis<"u"&&"APP_BUNDLE_ID"in globalThis&&(t["x-bundle-id"]=globalThis.APP_BUNDLE_ID)),typeof globalThis<"u"&&"TW_AUTH_TOKEN"in globalThis&&typeof globalThis.TW_AUTH_TOKEN=="string"&&(t.authorization=`Bearer ${globalThis.TW_AUTH_TOKEN}`),typeof globalThis<"u"&&"TW_CLI_AUTH_TOKEN"in globalThis&&typeof globalThis.TW_CLI_AUTH_TOKEN=="string"&&(t.authorization=`Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`,t["x-authorize-wallet"]="true"),pe(t)}const e=await fetch(this.paymasterUrl,{method:"POST",headers:t,body:JSON.stringify({jsonrpc:"2.0",id:1,method:"pm_sponsorUserOperation",params:[await Ct(a),this.entryPoint]})}),r=await e.json();if(!e.ok){const s=r.error||e.statusText,i=r.code||"UNKNOWN";throw new Error(`Paymaster error: ${s}
Status: ${e.status}
Code: ${i}`)}if(r.result)return typeof r.result=="string"?{paymasterAndData:r.result}:r.result;{const s=((n=r.error)==null?void 0:n.message)||r.error||e.statusText||"unknown error";throw new Error(`Paymaster error from ${this.paymasterUrl}: ${s}`)}}}const dr=(c,a,t,e)=>new cr(c,a,t,e);class vt{constructor(a,t,e,r,n,s,i){this.resolve=a,this.reject=t,this.entryPoint=e,this.sender=r,this.userOpHash=n,this.nonce=s,this.timeout=i,ye(this,"resolved",!1),this.boundLisener=this.listenerCallback.bind(this)}start(){const a=this.entryPoint.filters.UserOperationEvent(this.userOpHash);setTimeout(async()=>{const t=await this.entryPoint.queryFilter(a,-10);t.length>0?this.listenerCallback(t[0]):this.entryPoint.once(a,this.boundLisener)},100)}stop(){this.entryPoint.off("UserOperationEvent",this.boundLisener)}async listenerCallback(){var s;for(var a=arguments.length,t=new Array(a),e=0;e<a;e++)t[e]=arguments[e];const r=arguments[arguments.length-1];if(!r.args){console.error("got event without args",r);return}if(r.args.userOpHash!==this.userOpHash){console.log(`== event with wrong userOpHash: sender/nonce: event.${r.args.sender}@${r.args.nonce.toString()}!= userOp.${this.sender}@${parseInt((s=this.nonce)==null?void 0:s.toString())}`);return}const n=await r.getTransactionReceipt();r.args.success||await this.extractFailureReason(n),this.stop(),this.resolve(n),this.resolved=!0}async extractFailureReason(a){a.status=0;const t=await this.entryPoint.queryFilter(this.entryPoint.filters.UserOperationRevertReason(this.userOpHash,this.sender),a.blockHash);if(t[0]){let e=t[0].args.revertReason;e.startsWith("0x08c379a0")&&(e=V.decode(["string"],"0x"+e.substring(10)).toString()),this.reject(new Error(`UserOp failed with reason: ${e}`))}}}class lr extends _a{constructor(a,t,e,r,n){super(),Da(this,"provider",e),this.config=a,this.originalSigner=t,this.erc4337provider=e,this.httpRpcClient=r,this.smartAccountAPI=n}async sendTransaction(a,t){var o;const e=await R(a);await this.verifyAllNecessaryFields(e);const r=Yt(),n=await this.smartAccountAPI.createUnsignedUserOp(this.httpRpcClient,{target:e.to||"",data:((o=e.data)==null?void 0:o.toString())||"0x",value:e.value,gasLimit:e.gasLimit,nonce:r,maxFeePerGas:e.maxFeePerGas,maxPriorityFeePerGas:e.maxPriorityFeePerGas},t),s=await this.smartAccountAPI.signUserOp(n),i=await this.erc4337provider.constructUserOpTransactionResponse(s);try{await this.httpRpcClient.sendUserOpToBundler(s)}catch(d){throw this.unwrapError(d)}return i}unwrapError(a){var t,e;try{let r="Unknown Error";if(a.error)r=`The bundler has failed to include UserOperation in a batch: ${a.error}`;else if(a.body&&typeof a.body=="string"){const s=JSON.parse(a.body),i=a.status||"UNKNOWN",o=(s==null?void 0:s.code)||"UNKNOWN";let d=((t=s==null?void 0:s.error)==null?void 0:t.message)||((e=s==null?void 0:s.error)==null?void 0:e.data)||(s==null?void 0:s.error)||a.reason;if(d!=null&&d.includes("FailedOp")){let u="";const l=d.match(/FailedOp\((.*)\)/);if(l){const p=l[1].split(",");u=`(paymaster address: ${p[1]})`,d=p[2]}r=`The bundler has failed to include UserOperation in a batch: ${d} ${u}`}else r=`RPC error: ${d}
Status: ${i}
Code: ${o}`}const n=new Error(r);return n.stack=a.stack,n}catch{}return a}async verifyAllNecessaryFields(a){if(!a.to)throw new Error("Missing call target");if(!a.data&&!a.value)throw new Error("Missing call data or value")}connect(a){throw new Error("changing providers is not supported")}async getAddress(){return this.address||(this.address=await this.erc4337provider.getSenderAccountAddress()),this.address}async signMessage(a){return await this.smartAccountAPI.checkAccountPhantom()&&this.config.deployOnSign&&(console.log("Account contract not deployed yet. Deploying account before signing message"),await(await this.sendTransaction({to:await this.getAddress(),data:"0x"})).wait()),await this.originalSigner.signMessage(a)}async signTransaction(a,t){var o;const e=await R(a);await this.verifyAllNecessaryFields(e);const r=Yt(),n=await this.smartAccountAPI.createUnsignedUserOp(this.httpRpcClient,{target:e.to||"",data:((o=e.data)==null?void 0:o.toString())||"0x",value:e.value,gasLimit:e.gasLimit,nonce:r},t),s=await this.smartAccountAPI.signUserOp(n);return JSON.stringify(await Ct(s))}}class ur extends Aa{constructor(a,t,e,r,n,s,i){super({name:"ERC-4337 Custom Network",chainId:a}),this.chainId=a,this.config=t,this.originalSigner=e,this.originalProvider=r,this.httpRpcClient=n,this.entryPoint=s,this.smartAccountAPI=i,this.signer=new lr(t,e,this,n,i)}getSigner(){return this.signer}async perform(a,t){if(a==="sendTransaction"||a==="getTransactionReceipt")throw new Error("Should not get here. Investigate.");return a==="estimateGas"?v.from(5e5):await this.originalProvider.perform(a,t)}async getTransaction(a){return await super.getTransaction(a)}async getTransactionReceipt(a){const t=await a,e=await this.getSenderAccountAddress();return await new Promise((r,n)=>{new vt(r,n,this.entryPoint,e,t).start()})}async getSenderAccountAddress(){return await this.smartAccountAPI.getAccountAddress()}async waitForTransaction(a,t,e){const r=await this.getSenderAccountAddress();return await new Promise((n,s)=>{new vt(n,s,this.entryPoint,r,a,void 0,e).start()})}async constructUserOpTransactionResponse(a){const t=await R(a),e=await this.smartAccountAPI.getUserOpHash(t),r=async()=>await new Promise((n,s)=>{new vt(n,s,this.entryPoint,t.sender,e,t.nonce).start()});return{hash:e,confirmations:0,from:t.sender,nonce:0,gasLimit:v.from(t.callGasLimit),value:v.from(0),data:ge(t.callData),chainId:this.chainId,wait:async n=>{const s=await r();return t.initCode.length!==0&&await this.smartAccountAPI.checkAccountPhantom(),s}}}async detectNetwork(){return this.originalProvider.detectNetwork()}}function hr(c,a,t,e){const r=he.EntryPoint__factory.connect(c.entryPointAddress,t),n=new or(c.bundlerUrl,c.entryPointAddress,e,c.clientId,c.secretKey);return new ur(e,c,c.localSigner,t,n,r,a)}const pr="0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c";class gr{constructor(a){ye(this,"isPhantom",!0),this.provider=a.provider,this.entryPointAddress=a.entryPointAddress,this.accountAddress=a.accountAddress,this.paymasterAPI=a.paymasterAPI,this.gasless=a.gasless,this.entryPointView=he.EntryPoint__factory.connect(a.entryPointAddress,a.provider).connect(N)}async checkAccountPhantom(){return this.isPhantom?((await this.provider.getCode(this.getAccountAddress())).length>2&&(this.isPhantom=!1),this.isPhantom):this.isPhantom}async getInitCode(){return await this.checkAccountPhantom()?await this.getAccountInitCode():"0x"}async getVerificationGasLimit(){return 1e5}async getUserOpHash(a){const t=await this.provider.getNetwork().then(e=>e.chainId);return sr(a,this.entryPointAddress,t)}async getAccountAddress(){return this.senderAddress||(this.accountAddress?this.senderAddress=this.accountAddress:this.senderAddress=await this.getCounterFactualAddress()),this.senderAddress}async estimateCreationGas(a){if(!a||a==="0x")return 0;const t=a.substring(0,42),e="0x"+a.substring(42);return await this.provider.estimateGas({to:t,data:e})}async createUnsignedUserOp(a,t,e){const r=await this.getInitCode(),n=yr(t.value)??v.from(0),s=e!=null&&e.batchData?t.data:await this.prepareExecute(t.target,n,t.data).then(h=>h.encode());let{maxFeePerGas:i,maxPriorityFeePerGas:o}=t;if(!i||!o){const h=await Ca(this.provider);if(o||(o=h.maxPriorityFeePerGas??void 0),!i){i=h.maxFeePerGas??void 0;const m=(await this.provider.getNetwork()).chainId;(m===ba.chainId||m===Pa.chainId||m===va.chainId)&&(o=i)}}if(!i||!o)throw new Error("maxFeePerGas or maxPriorityFeePerGas could not be calculated, please pass them explicitely");const[d,u]=await Promise.all([this.getAccountAddress(),t.nonce?Promise.resolve(t.nonce):this.getNonce()]),l={sender:d,nonce:u,initCode:r,callData:s,maxFeePerGas:i,maxPriorityFeePerGas:o,callGasLimit:v.from(1e6),verificationGasLimit:v.from(1e6),preVerificationGas:v.from(1e6),paymasterAndData:"0x",signature:pr};if((e==null?void 0:e.gasless)!==void 0?e.gasless:this.gasless){const h=await this.paymasterAPI.getPaymasterAndData(l),y=h.paymasterAndData;if(y&&y!=="0x"&&(l.paymasterAndData=y),h.callGasLimit&&h.verificationGasLimit&&h.preVerificationGas)l.callGasLimit=v.from(h.callGasLimit),l.verificationGasLimit=v.from(h.verificationGasLimit),l.preVerificationGas=v.from(h.preVerificationGas);else{let m;try{m=await a.estimateUserOpGas(l)}catch(g){throw this.unwrapBundlerError(g)}if(l.callGasLimit=v.from(m.callGasLimit),l.verificationGasLimit=v.from(m.verificationGasLimit),l.preVerificationGas=v.from(m.preVerificationGas),y&&y!=="0x"){const g=await this.paymasterAPI.getPaymasterAndData(l);g.paymasterAndData&&g.paymasterAndData!=="0x"&&(l.paymasterAndData=g.paymasterAndData)}}}else{let h;try{h=await a.estimateUserOpGas(l)}catch(y){throw this.unwrapBundlerError(y)}l.callGasLimit=v.from(h.callGasLimit),l.verificationGasLimit=v.from(h.verificationGasLimit),l.preVerificationGas=v.from(h.preVerificationGas)}return{...l,signature:""}}async signUserOp(a){const t=await this.getUserOpHash(a),e=await this.signUserOpHash(t);return{...a,signature:e}}async getUserOpReceipt(a){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:3e4,e=arguments.length>2&&arguments[2]!==void 0?arguments[2]:2e3;const r=Date.now()+t;for(;Date.now()<r;){const n=await this.entryPointView.queryFilter(this.entryPointView.filters.UserOperationEvent(a));if(n[0])return n[0].transactionHash;await new Promise(s=>setTimeout(s,e))}return null}unwrapBundlerError(a){var e;const t=((e=a==null?void 0:a.error)==null?void 0:e.message)||a.error||a.message||a;return new Error(t)}}function yr(c){return!c||c===""?null:v.from(c.toString())}class mr extends gr{constructor(a,t){super({...a,provider:t}),this.params=a,this.sdk=B.fromPrivateKey(Ce,a.chain,{clientId:a.clientId,secretKey:a.secretKey,supportedChains:typeof a.chain=="object"?[a.chain]:void 0})}async getChainId(){return await this.provider.getNetwork().then(a=>a.chainId)}async getAccountContract(){var a;return this.accountContract||((a=this.params.accountInfo)!=null&&a.abi?this.accountContract=await this.sdk.getContract(await this.getAccountAddress(),this.params.accountInfo.abi):this.accountContract=await this.sdk.getContract(await this.getAccountAddress(),ma)),this.accountContract}async getAccountInitCode(){const a=await this.getFactoryContract();console.log("Deploying smart wallet via factory");const t=await this.params.localSigner.getAddress(),e=await this.params.factoryInfo.createAccount(a,t);try{console.log("Cost to deploy smart wallet: ",(await e.estimateGasCost()).ether,"ETH")}catch(r){console.error("Cost to deploy smart wallet: unknown",r)}return fa([a.getAddress(),e.encode()])}async getFactoryContract(){var a;return this.factoryContract?this.factoryContract:((a=this.params.factoryInfo)!=null&&a.abi?this.factoryContract=await this.sdk.getContract(this.params.factoryAddress,this.params.factoryInfo.abi):this.factoryContract=await this.sdk.getContract(this.params.factoryAddress),this.factoryContract)}async getCounterFactualAddress(){if(this.params.accountAddress)return this.params.accountAddress;const a=await this.getFactoryContract(),t=await this.params.localSigner.getAddress();return this.params.factoryInfo.getAccountAddress(a,t)}async getNonce(){if(await this.checkAccountPhantom())return v.from(0);const a=await this.getAccountContract();return this.params.accountInfo.getNonce(a)}async prepareExecute(a,t,e){const r=await this.getAccountContract();return this.params.accountInfo.execute(r,a,t,e)}async prepareExecuteBatch(a,t,e){return(await this.getAccountContract()).prepare("executeBatch",[a,t,e])}async signUserOpHash(a){return await this.params.localSigner.signMessage(It(a))}async isAcountDeployed(){return!await this.checkAccountPhantom()}}class fr extends ha{constructor(a){super(),this.config=a}async initialize(a){const t=this.config,e=U(t.chain,{clientId:t.clientId,secretKey:t.secretKey});this.chainId=(await e.getNetwork()).chainId;const r=this.config.bundlerUrl||`https://${this.chainId}.bundler.thirdweb.com`,n=this.config.paymasterUrl||`https://${this.chainId}.bundler.thirdweb.com/v2`,s=t.entryPointAddress||pa,i=t.deployOnSign??!0,o=await a.personalWallet.getSigner(),d={chain:t.chain,localSigner:o,entryPointAddress:s,bundlerUrl:r,paymasterAPI:this.config.paymasterAPI?this.config.paymasterAPI:dr(n,s,this.config.clientId,this.config.secretKey),gasless:t.gasless,deployOnSign:i,factoryAddress:t.factoryAddress,accountAddress:a.accountAddress,factoryInfo:t.factoryInfo||this.defaultFactoryInfo(),accountInfo:t.accountInfo||this.defaultAccountInfo(),clientId:t.clientId,secretKey:t.secretKey};this.personalWallet=a.personalWallet;const u=new mr(d,e);this.aaProvider=hr(d,u,e,this.chainId),this.accountApi=u}async connect(a){return await this.initialize(a),await this.getAddress()}getProvider(){if(!this.aaProvider)throw new Error("Personal wallet not connected");return Promise.resolve(this.aaProvider)}async getSigner(){if(!this.aaProvider)throw new Error("Personal wallet not connected");return Promise.resolve(this.aaProvider.getSigner())}async getAddress(){return(await this.getSigner()).getAddress()}async isConnected(){try{return!!await this.getAddress()}catch{return!1}}async disconnect(){this.personalWallet=void 0,this.aaProvider=void 0}async switchChain(a){if((await(await this.getProvider()).getNetwork()).chainId!==a)throw new Error("Not supported.")}setupListeners(){return Promise.resolve()}updateChains(a){}async hasPermissionToExecute(a){var s;const t=await this.getAccountContract(),r=await(await this.getSigner()).getAddress(),n=(s=(await t.account.getAllSigners()).filter(i=>Vt(i.signer)===Vt(r))[0])==null?void 0:s.permissions;return n?n.approvedCallTargets.includes(a.getTarget()):!1}async send(a,t){return(await this.getSigner()).sendTransaction({to:a.getTarget(),data:a.encode(),value:await a.getValue()},t)}async execute(a,t){return{receipt:await(await this.send(a,t)).wait()}}async sendBatch(a,t){if(!this.accountApi)throw new Error("Personal wallet not connected");const e=await this.getSigner(),{tx:r,batchData:n}=await this.prepareBatchTx(a);return await e.sendTransaction({to:await e.getAddress(),data:r.encode(),value:0},{...t,batchData:n})}async executeBatch(a,t){return{receipt:await(await this.sendBatch(a,t)).wait()}}async sendRaw(a,t){if(!this.accountApi)throw new Error("Personal wallet not connected");return(await this.getSigner()).sendTransaction(a,t)}async executeRaw(a,t){return{receipt:await(await this.sendRaw(a,t)).wait()}}async sendBatchRaw(a,t){if(!this.accountApi)throw new Error("Personal wallet not connected");const e=await this.getSigner(),r=await this.prepareBatchRaw(a);return e.sendTransaction({to:await e.getAddress(),data:r.tx.encode(),value:0},{...t,batchData:r.batchData})}async executeBatchRaw(a,t){return{receipt:await(await this.sendBatchRaw(a,t)).wait()}}async estimate(a,t){if(!this.accountApi)throw new Error("Personal wallet not connected");return this.estimateTx({target:a.getTarget(),data:a.encode(),value:await a.getValue(),gasLimit:await a.getOverrides().gasLimit,maxFeePerGas:await a.getOverrides().maxFeePerGas,maxPriorityFeePerGas:await a.getOverrides().maxPriorityFeePerGas,nonce:await a.getOverrides().nonce},t)}async estimateRaw(a,t){var r;if(!this.accountApi)throw new Error("Personal wallet not connected");const e=await R(a);return this.estimateTx({target:e.to||N,data:((r=e.data)==null?void 0:r.toString())||"",value:e.value||v.from(0),gasLimit:e.gasLimit,maxFeePerGas:e.maxFeePerGas,maxPriorityFeePerGas:e.maxPriorityFeePerGas,nonce:e.nonce},t)}async estimateBatch(a,t){if(!this.accountApi)throw new Error("Personal wallet not connected");const{tx:e,batchData:r}=await this.prepareBatchTx(a);return this.estimateTx({target:e.getTarget(),data:e.encode(),value:await e.getValue(),gasLimit:await e.getOverrides().gasLimit,maxFeePerGas:await e.getOverrides().maxFeePerGas,maxPriorityFeePerGas:await e.getOverrides().maxPriorityFeePerGas,nonce:await e.getOverrides().nonce},{...t,batchData:r})}async estimateBatchRaw(a,t){if(!this.accountApi)throw new Error("Personal wallet not connected");const{tx:e,batchData:r}=await this.prepareBatchRaw(a);return this.estimateTx({target:e.getTarget(),data:e.encode(),value:await e.getValue(),gasLimit:await e.getOverrides().gasLimit,maxFeePerGas:await e.getOverrides().maxFeePerGas,maxPriorityFeePerGas:await e.getOverrides().maxPriorityFeePerGas,nonce:await e.getOverrides().nonce},{...t,batchData:r})}async deploy(a){if(!this.accountApi)throw new Error("Personal wallet not connected");const t=await this.getSigner();return{receipt:await(await t.sendTransaction({to:await t.getAddress(),data:"0x"},{...a,batchData:{targets:[],data:[],values:[]}})).wait()}}async isDeployed(){if(!this.accountApi)throw new Error("Personal wallet not connected");return await this.accountApi.isAcountDeployed()}async deployIfNeeded(a){await this.isDeployed()||await this.deploy(a)}async grantPermissions(a,t){return await this.deployIfNeeded(),(await this.getAccountContract()).account.grantPermissions(a,t)}async revokePermissions(a){return await this.deployIfNeeded(),(await this.getAccountContract()).account.revokeAccess(a)}async addAdmin(a){return await this.deployIfNeeded(),(await this.getAccountContract()).account.grantAdminPermissions(a)}async removeAdmin(a){return await this.deployIfNeeded(),(await this.getAccountContract()).account.revokeAdminPermissions(a)}async getAllActiveSigners(){var t;if(await this.isDeployed())return(await this.getAccountContract()).account.getAllAdminsAndSigners();{const e=await((t=this.personalWallet)==null?void 0:t.getSigner());if(!e)throw new Error("Personal wallet not connected");return[{isAdmin:!0,signer:await e.getAddress(),permissions:{startDate:new Date(0),expirationDate:new Date(0),nativeTokenLimitPerTransaction:v.from(0),approvedCallTargets:[]}}]}}async getAccountContract(){var e;if(!await this.isDeployed())throw new Error("Account contract is not deployed yet. You can deploy it manually using SmartWallet.deploy(), or by executing a transaction from this wallet.");const t=B.fromSigner(await this.getSigner(),this.config.chain,{clientId:this.config.clientId,secretKey:this.config.secretKey});return(e=this.config.accountInfo)!=null&&e.abi?t.getContract(await this.getAddress(),this.config.accountInfo.abi):t.getContract(await this.getAddress())}async getFactoryContract(){var t;const a=B.fromSigner(await this.getSigner(),this.config.chain,{clientId:this.config.clientId,secretKey:this.config.secretKey});return(t=this.config.factoryInfo)!=null&&t.abi?a.getContract(this.config.factoryAddress,this.config.factoryInfo.abi):a.getContract(this.config.factoryAddress)}defaultFactoryInfo(){return{createAccount:async(a,t)=>a.prepare("createAccount",[t,$t("")]),getAccountAddress:async(a,t)=>await a.call("getAddress",[t,$t("")])}}defaultAccountInfo(){return{execute:async(a,t,e,r)=>a.prepare("execute",[t,e,r]),getNonce:async a=>a.call("getNonce",[])}}async estimateTx(a,t){if(!this.accountApi||!this.aaProvider)throw new Error("Personal wallet not connected");let e=v.from(0);const[r,n]=await Promise.all([this.getProvider(),this.isDeployed()]);n||(e=await this.estimateDeploymentGasLimit());const[s,i]=await Promise.all([this.accountApi.createUnsignedUserOp(this.aaProvider.httpRpcClient,a,t),ga(r)]),o=await R(s),d=v.from(o.callGasLimit),u=d.mul(i),l=e.mul(i),p=l.add(u);return{ether:ya(p),wei:p,details:{deployGasLimit:e,transactionGasLimit:d,gasPrice:i,transactionCost:u,deployCost:l,totalCost:p}}}async estimateDeploymentGasLimit(){if(!this.accountApi)throw new Error("Personal wallet not connected");const a=await this.accountApi.getInitCode(),[t,e]=await Promise.all([this.accountApi.estimateCreationGas(a),this.accountApi.getVerificationGasLimit()]);return v.from(e).add(t)}async prepareBatchRaw(a){if(!this.accountApi)throw new Error("Personal wallet not connected");const t=await Promise.all(a.map(s=>R(s))),e=t.map(s=>s.to||N),r=t.map(s=>s.data||"0x"),n=t.map(s=>s.value||v.from(0));return{tx:await this.accountApi.prepareExecuteBatch(e,n,r),batchData:{targets:e,data:r,values:n}}}async prepareBatchTx(a){if(!this.accountApi)throw new Error("Personal wallet not connected");const t=a.map(n=>n.getTarget()),e=a.map(n=>n.encode()),r=await Promise.all(a.map(n=>n.getValue()));return{tx:await this.accountApi.prepareExecuteBatch(t,r,e),batchData:{targets:t,data:e,values:r}}}}const br=Object.freeze(Object.defineProperty({__proto__:null,SmartWalletConnector:fr},Symbol.toStringTag,{value:"Module"}));export{fr as S,At as a,Ua as b,Ba as d,Sa as g,br as t};
